module FFI
  class AutoPointer < Pointer
    extend DataConverter

    def self.from_native: (FFI::Pointer ptr, nil ctx) -> FFI::AutoPointer

    # def self.native_type: () -> FFI::Type::POINTER
    def self.native_type: () -> FFI::Type::Builtin

    def initialize:
      (FFI::Pointer pointer, Method method) -> instance
    | (FFI::Pointer pointer, Proc proc) -> instance
    | (FFI::Pointer pointer) { (FFI::Pointer) -> untyped } -> instance
    | (FFI::Pointer pointer)-> instance

    def free: () -> nil
    def autorelease=: (bool autorelease) -> bool
    def autorelease?: () -> bool

    class Releaser
      attr_accessor autorelease: untyped

      def initialize: (FFI::Pointer ptr, _Call proc) -> instance
      def free: () -> nil
      def call: (*untyped args) -> untyped
    end

    class DefaultReleaser < Releaser
      def release: (FFI::Pointer ptr) -> void
    end

    class CallableReleaser < Releaser
      def release: (FFI::Pointer ptr) -> void
    end
  end
end
