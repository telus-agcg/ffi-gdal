module FFI
  module OGR
    module API
      def self.OGR_G_CreateGeometry: (Symbol geometry_type) -> FFI::Pointer
      def self.OGR_G_CreateFromGML: (String gml) -> FFI::Pointer
      def self.OGR_G_CreateGeometryFromJson: (String json) -> FFI::Pointer
      def self.OGR_G_CreateFromWkb: (
        FFI::MemoryPointer data,
        (FFI::Pointer | FFI::MemoryPointer | nil) spatial_ref_ptr,
        FFI::MemoryPointer geometry_out,
        Integer number_of_bytes
      ) -> (:OGRERR_NONE | :OGRERR_NOT_ENOUGH_DATA | :OGRERR_UNSUPPORTED_GEOMETRY_TYPE | :OGRERR_CORRUPT_DATA)

      def self.OGR_G_CreateFromWkt: (
        FFI::MemoryPointer wkt,
        (FFI::Pointer | FFI::MemoryPointer | nil) spatial_ref_ptr,
        FFI::MemoryPointer geometry_out,
      ) -> (:OGRERR_NONE | :OGRERR_NOT_ENOUGH_DATA | :OGRERR_UNSUPPORTED_GEOMETRY_TYPE | :OGRERR_CORRUPT_DATA)

      def self.OGR_G_ExportToWkt: (FFI::Pointer pointer, FFI::MemoryPointer wkt_out) -> :OGRERR_NONE

      def self.OGR_G_DestroyGeometry: (FFI::Pointer geometry_handle) -> void

      def self.OGR_G_GetGeometryType: (FFI::Pointer geometry_handle) -> FFI::OGR::Core::wkb_geometry_type_symbol

      def self.OGR_G_Area: (FFI::Pointer geometry_handle) -> Float
      def self.OGR_G_Length: (FFI::Pointer geometry_handle) -> Float

      def self.OGR_G_GetX: (FFI::Pointer geometry_handle, Integer index) -> Float
      def self.OGR_G_GetY: (FFI::Pointer geometry_handle, Integer index) -> Float
      def self.OGR_G_GetZ: (FFI::Pointer geometry_handle, Integer index) -> Float

      def self.OGR_G_GetPoints: (
        FFI::Pointer geometry_handle,
        FFI::Buffer? x_buffer,
        Integer x_stride,
        FFI::Buffer? y_buffer,
        Integer y_stride,
        FFI::Buffer? z_buffer,
        ?Integer z_stride
      ) -> Integer

      def self.OGR_G_GetPoint: (
        FFI::Pointer geometry_handle,
        Integer index,
        FFI::Buffer x_buffer,
        FFI::Buffer y_buffer,
        FFI::Buffer? z_buffer
      ) -> void

      def self.OGR_G_GetPointCount: (FFI::Pointer geometry_handle) -> Integer
      def self.OGR_G_SetPointCount: (FFI::Pointer geometry_handle, Integer new_point_count) -> void

      def self.OGR_G_AddPoint: (FFI::Pointer geometry_handle, Float x, Float y, Float m) -> void
      def self.OGR_G_AddPoint_2D: (FFI::Pointer geometry_handle, Float x, Float y) -> void

      def self.OGR_G_SetPoint: (FFI::Pointer geometry_handle, Integer vertex_index, Float x, Float y, Float z) -> void
      def self.OGR_G_SetPoint_2D: (FFI::Pointer geometry_handle, Integer vertex_index, Float x, Float y) -> void

      def self.OGR_G_UnionCascaded: (FFI::Pointer geometry_handle) -> FFI::Pointer
    end
  end
end
