module GDAL
  class WarpOperation
    # @param pointer [FFI::Pointer]
    def self.release: (untyped pointer) -> (nil | untyped)

    # @return [FFI::Pointer]
    attr_reader c_pointer: untyped

    # @param warp_options [GDAL::WarpOptions]
    def initialize: (untyped warp_options) -> untyped

    def destroy!: () -> untyped

    # @param x_offset [Integer] X offset of the destination image.
    # @param y_offset [Integer] Y offset of the destination image.
    # @param x_size [Integer] X size (width) of the destination image.
    # @param y_size [Integer] Y size (height) of the destination image.
    def chunk_and_warp_image: (untyped x_offset, untyped y_offset, untyped x_size, untyped y_size) -> untyped

    # @param x_offset [Integer] X offset of the destination image.
    # @param y_offset [Integer] Y offset of the destination image.
    # @param x_size [Integer] X size (width) of the destination image.
    # @param y_size [Integer] Y size (height) of the destination image.
    def chunk_and_warp_multi: (untyped x_offset, untyped y_offset, untyped x_size, untyped y_size) -> untyped

    # @param destination_x_offset [Integer] X offset of the destination image.
    # @param destination_y_offset [Integer] Y offset of the destination image.
    # @param destination_x_size [Integer] X size (width) of the destination image.
    # @param destination_y_size [Integer] Y size (height) of the destination image.
    # @param source_x_offset [Integer] X offset of the source image.
    # @param source_y_offset [Integer] Y offset of the source image.
    # @param source_x_size [Integer] X size (width) of the source image.
    # @param source_y_size [Integer] Y size (height) of the source image.
    def warp_region: (untyped destination_x_offset, untyped destination_y_offset, untyped destination_x_size, untyped destination_y_size, untyped source_x_offset, untyped source_y_offset, untyped source_x_size, untyped source_y_size) -> untyped

    # @param destination_x_offset [Integer] X offset of the destination image.
    # @param destination_y_offset [Integer] Y offset of the destination image.
    # @param destination_x_size [Integer] X size (width) of the destination image.
    # @param destination_y_size [Integer] Y size (height) of the destination image.
    # @param buffer [FFI::Pointer]
    # @param data_type [FFI::GDAL::DataType]
    # @param source_x_offset [Integer] X offset of the source image.
    # @param source_y_offset [Integer] Y offset of the source image.
    # @param source_x_size [Integer] X size (width) of the source image.
    # @param source_y_size [Integer] Y size (height) of the source image.
    # rubocop:disable Metrics/ParameterLists
    def warp_region_to_buffer: (untyped destination_x_offset, untyped destination_y_offset, untyped destination_x_size, untyped destination_y_size, untyped buffer, untyped data_type, untyped source_x_offset, untyped source_y_offset, untyped source_x_size, untyped source_y_size) -> untyped
  end
end
