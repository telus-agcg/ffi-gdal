module OGR
  module GeometryTypes
    module Curve
      include GDAL::Logger
      include OGR::Geometry

      type point_array = Array[[Float, Float, Float]] | Array[[Float, Float]]

      def x: (Integer point_number) -> Float
      def y: (Integer point_number) -> Float
      def z: (Integer point_number) -> Float
      def point: (Integer point_number) -> point_array

      alias get_point point

      def add_point: (Float x, Float y, ?::Float z) -> void
      def set_point: (Integer index, Float x, Float y, ?Float? z) -> void

      # def points: -> point_array
      def points: -> (Array[[Float, Float, Float]] | Array[[Float, Float]])
      alias get_points points
      alias point_values points

      def point_count=: (Integer new_count) -> void
      def length: -> Float
    end
  end
end
